////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.6
//  \   \         Application : sch2hdl
//  /   /         Filename : DECODER1.vf
// /___/   /\     Timestamp : 07/13/2018 07:35:50
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family artix7 -verilog E:/project/schematic/ALU/DECODER1.vf -w E:/project/schematic/ALU/DECODER1.sch
//Design Name: DECODER1
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module DECODER1(A, 
                B, 
                C, 
                ENABLE, 
                RESET, 
                I_0, 
                I_1, 
                I_2, 
                I_3, 
                I_4, 
                I_5, 
                I_6, 
                I_7);

    input A;
    input B;
    input C;
    input ENABLE;
    input RESET;
   output I_0;
   output I_1;
   output I_2;
   output I_3;
   output I_4;
   output I_5;
   output I_6;
   output I_7;
   
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_13;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   
   INV  XLXI_2 (.I(B), 
               .O(XLXN_5));
   INV  XLXI_3 (.I(C), 
               .O(XLXN_6));
   INV  XLXI_4 (.I(A), 
               .O(XLXN_13));
   AND3  XLXI_5 (.I0(XLXN_6), 
                .I1(XLXN_5), 
                .I2(XLXN_13), 
                .O(XLXN_16));
   AND3  XLXI_6 (.I0(C), 
                .I1(XLXN_5), 
                .I2(XLXN_13), 
                .O(XLXN_17));
   AND3  XLXI_7 (.I0(XLXN_6), 
                .I1(B), 
                .I2(XLXN_13), 
                .O(XLXN_18));
   AND3  XLXI_8 (.I0(C), 
                .I1(B), 
                .I2(XLXN_13), 
                .O(XLXN_19));
   AND3  XLXI_9 (.I0(XLXN_6), 
                .I1(XLXN_5), 
                .I2(A), 
                .O(XLXN_20));
   AND3  XLXI_10 (.I0(C), 
                 .I1(XLXN_5), 
                 .I2(A), 
                 .O(XLXN_21));
   AND3  XLXI_11 (.I0(XLXN_6), 
                 .I1(B), 
                 .I2(A), 
                 .O(XLXN_22));
   AND3  XLXI_12 (.I0(C), 
                 .I1(B), 
                 .I2(A), 
                 .O(XLXN_23));
   AND2  XLXI_13 (.I0(ENABLE), 
                 .I1(XLXN_16), 
                 .O(XLXN_25));
   AND2  XLXI_14 (.I0(ENABLE), 
                 .I1(XLXN_17), 
                 .O(XLXN_26));
   AND2  XLXI_15 (.I0(ENABLE), 
                 .I1(XLXN_18), 
                 .O(XLXN_27));
   AND2  XLXI_16 (.I0(ENABLE), 
                 .I1(XLXN_19), 
                 .O(XLXN_28));
   AND2  XLXI_17 (.I0(ENABLE), 
                 .I1(XLXN_20), 
                 .O(XLXN_29));
   AND2  XLXI_18 (.I0(ENABLE), 
                 .I1(XLXN_21), 
                 .O(XLXN_30));
   AND2  XLXI_19 (.I0(ENABLE), 
                 .I1(XLXN_22), 
                 .O(XLXN_31));
   AND2  XLXI_20 (.I0(ENABLE), 
                 .I1(XLXN_23), 
                 .O(XLXN_32));
   AND2  XLXI_21 (.I0(RESET), 
                 .I1(XLXN_25), 
                 .O(I_0));
   AND2  XLXI_22 (.I0(RESET), 
                 .I1(XLXN_26), 
                 .O(I_1));
   AND2  XLXI_23 (.I0(RESET), 
                 .I1(XLXN_27), 
                 .O(I_2));
   AND2  XLXI_24 (.I0(RESET), 
                 .I1(XLXN_28), 
                 .O(I_3));
   AND2  XLXI_25 (.I0(RESET), 
                 .I1(XLXN_29), 
                 .O(I_4));
   AND2  XLXI_26 (.I0(RESET), 
                 .I1(XLXN_30), 
                 .O(I_5));
   AND2  XLXI_27 (.I0(RESET), 
                 .I1(XLXN_31), 
                 .O(I_6));
   AND2  XLXI_28 (.I0(RESET), 
                 .I1(XLXN_32), 
                 .O(I_7));
endmodule
